# Name of Workflow
name: Staging

# 3ggered at
on:
  pull_request:
    branches:
      - staging

# Jobs to carry out
jobs:
  deploy:
    # OS to be used
    runs-on: ubuntu-latest

    # Steps
    steps:
      # 1. Get code from repository
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      # 2. Install Node 16
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      # 3. Run npm install
      - run: npm install

      # 4. Run tests
      - name: Run jest
        uses: stefanoeb/jest-action@1.0.3
        with:
          build: npm run build
          start: npm start
          wait-on: http://localhost:3000

      # 5. Build project
      - name: Trigger Netlify Build & Deploy
        id: trigger-build
        run: curl -X POST -d {} ${{ secrets.NETLIFY_BUILD_STAGING_HOOK }}

      # 6. Deploy to Netlify
      # - name: Production deployment
      #   id: deploy-netlify
      #   run: |
      #     COMMAND="netlify deploy --prod"
      #     OUTPUT=$(sh -c "$COMMAND")

      #     NETLIFY_LOGS_URL=$(echo "$OUTPUT" | grep -Eo '(http|https)://app.netlify.com/[a-zA-Z0-9./?=_-]*') # Unique key: app.netlify.com
      #     NETLIFY_LIVE_URL=$(echo "$OUTPUT" | grep -Eo '(http|https)://[a-zA-Z0-9./?=_-]*' | grep -Ev "netlify.com|(--)") # Unique key: doesn't contain -- and app.netlify.com

      #     echo "::set-output name=netlify_logs_url::$NETLIFY_LOGS_URL"
      #     echo "::set-output name=netlify_live_url::$NETLIFY_LIVE_URL"
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
